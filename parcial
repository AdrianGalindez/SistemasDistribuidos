# -*- mode: ruby -*-
# vi: set ft=ruby:

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

Vagrant.configure(2) do |config|

  NodeCount = 3

  (1..NodeCount).each do |i|
    config.vm.define "ubuntuvm8#{i}" do |node|
      node.vm.box = "ubuntu/bionic64"
      node.vm.hostname = "ubuntuvm8#{i}.example.com"
      node.vm.network "private_network", ip: "172.42.42.10#{i}"
      node.vm.provider "virtualbox" do |v|
        v.name = "ubuntuvm8#{i}"
        v.memory = 2048
        v.cpus = 1
      end

      # ðŸ‘‰ forward port solo en la primera VM (ubuntuvm81)
      if i == 1
        node.vm.network "forwarded_port", guest: 80, host: 8080   # <- agregado
      end

      # ConfiguraciÃ³n comÃºn para todas las mÃ¡quinas
      node.vm.provision "shell", inline: <<-SHELL
        # Instalar LXD
        sudo apt-get update
        sudo apt-get install -y lxd
        
        # Inicializar LXD automÃ¡ticamente
        sudo lxd init --auto
        
        # Agregar usuario vagrant al grupo lxd
        sudo usermod -aG lxd vagrant
      SHELL

      # Aprovisionamiento especÃ­fico segÃºn la mÃ¡quina
      if i == 1
        # vm1 - contenedor LXD HAproxy
        node.vm.provision "shell", inline: <<-SHELL
          # Esperar a que LXD estÃ© listo
          sleep 10
          
          # Crear contenedor HAproxy
          sudo lxc launch ubuntu:18.04 HAproxi
          
          # Esperar a que el contenedor se inicie
          sleep 20
          
          # Instalar HAproxy en el contenedor
          sudo lxc exec HAproxi -- apt-get update
          sudo lxc exec HAproxi -- apt-get install -y haproxy
        SHELL
      else
        # vm2 y vm3 - contenedores LXD web1 y web2 con Apache2
        container_name = i == 2 ? "web1" : "web2"
        node.vm.provision "shell", inline: <<-SHELL
          # Esperar a que LXD estÃ© listo
          sleep 10
          
          # Crear contenedor web
          sudo lxc launch ubuntu:18.04 #{container_name}
          
          # Esperar a que el contenedor se inicie
          sleep 20
          
          # Instalar Apache en el contenedor
          sudo lxc exec #{container_name} -- apt-get update
          sudo lxc exec #{container_name} -- apt-get install -y apache2
          
          # Crear pÃ¡gina HTML personalizada
          sudo lxc exec #{container_name} -- bash -c 'echo "<h1>Servidor #{container_name}</h1>" > /var/www/html/index.html'
        SHELL
      end

    end
  end

end
